services:
  server:
    image: chat/server:${SERVER_VERSION}
    build:
      context: project/server
      dockerfile: Dockerfile

    networks:
      - chat-net
    depends_on:
      redis:
        condition: service_healthy
    deploy:
      replicas: ${SERVER_REPLICA}

    env_file:
      - project/server/.env
    environment:
      - REPOSITORY_TYPE=redis
      - REDIS_HOST=redis-container

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 10s
      timeout: 5s
      retries: 5

  client:
    image: chat/client:${CLIENT_VERSION}
    build:
      context: project/client
      dockerfile: Dockerfile
      args:
        - VITE_SOCKET_SERVER_URL=http://localhost:${SERVER_PORT}/chat
        - VITE_MANUAL_USER_SET=true

    networks:
      - chat-net
    depends_on:
      server:
        condition: service_healthy
    ports:
      - ${CLIENT_PORT}:80

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:8.2.1
    container_name: redis-container

    networks:
      - chat-net
    ports:
      - ${REDIS_PORT}:6379

    volumes:
      - redis-data:/data
    env_file:
      - .env

    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5
      start_period: 10s

  dynamodb:
    image: amazon/dynamodb-local:3.1.0
    container_name: dynamodb-container

    user: root
    command: -jar DynamoDBLocal.jar -sharedDb -dbPath /home/dynamodblocal/data/

    networks:
      - chat-net
    ports:
      - ${DYNAMO_PORT}:8000

    volumes:
      - dynamodb-data:/home/dynamodblocal/data

    healthcheck:
      test: ["CMD", "curl", "-s", "-w", "%{http_code}", "http://localhost:8000"]
      interval: 10s
      retries: 5
      start_period: 10s

include:
  - ./infra/docker-compose.yml
  - ./project/consumers/docker-compose.yml

networks:
  chat-net:
    name: chat-net
    driver: bridge

volumes:
  redis-data:
    driver: local
  dynamodb-data:
    driver: local
